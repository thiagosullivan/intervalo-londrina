import { useRouter } from 'next/router';
import React from 'react';
import { getPosts } from '../services/graphcms';

import Head from 'next/head';
import { GetStaticProps } from "next";

import BackgroundImg from '../components/BgSite';
import SideLine from '../components/BgSite/SideLine';
import CategoriesPosts from '../components/CategoriesPosts';
import Footer from '../components/Footer';
import Header from '../components/Header';
import Newsletter from '../components/Newsletter';
import PostCardHome from '../components/PostCardHome';
import TopHead from '../components/TopHead';

import { HomeContainer } from '../styles/HomeStyle';
import PostCardResults from '../components/PostCardResults';



export async function getStaticProps() {
  const posts = (await getPosts()) || [];

  return {
    props: { posts }
  }
}

function ResultsPage({ posts }) {
  console.log(posts, "result page")

  const router = useRouter()
  const searchQuery = router.query.s
  let filteredPosts = posts

  if (searchQuery) {
    const searchTerms = String(searchQuery).toLowerCase().trim()
    const searchTermsArray = searchTerms
      .split(' ')
      .filter(term => term.length > 2)

    filteredPosts = posts.filter(post => {
      const title = post.node.title.toLowerCase()
      const description = post.node.resume.toLowerCase()

      let includesInTitle
      let includesInDescription

      searchTermsArray.forEach(searchTerm => {
        includesInTitle = title.includes(searchTerm)
        includesInDescription = description.includes(searchTerm)

        return includesInTitle || includesInDescription
      })

      if (includesInTitle || includesInDescription) return true
    })
  }

  console.log(filteredPosts, "posts filtrados")

  return (
    <div>

      <Head>
        <title>Resultados | Intervalo Londrina</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="true" />
        <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;300;400;500;600;700&display=swap" rel="stylesheet" />
      </Head>

      <Header />
      <BackgroundImg />
      <SideLine />
      <HomeContainer>
        <main className="container">
          <TopHead />
          {/* <CategoriesPosts /> */}
          <div className="home_subtitle">
            <div className="sub_line"></div>
            <h1>Resultados</h1>
            <div className="sub_line"></div>
          </div>
          {filteredPosts.length === 0 && (
            <p>
              Sorry. Post not founded.
            </p>
          )}
          <PostCardResults postagens={filteredPosts} />

          {/* {filteredPosts.map(post => (

            // console.log(post, "posts filtrado dentro do map")
            <PostCardResults postagens={filteredPosts} />
            // <PostCardHome
            //   key={post.node.title}
            //   postagens={post.node}
            // />
              // <LatestCard
              //   key={post.id}
              //   id={post.id}
              //   title={post.title}
              //   description={post.description}
              //   image={post.image}
              //   createdAt={post.createdAt}
              //   author={post.author}
              // />
              // <div>
              //   <p key={post.node.title}>{post.node.title}</p>
              //   <img src={post.node.postImage.url} />
              // </div>
            ))}           */}
          {/* {posts.map((post) => <PostCardHome postagens={post.node} />)} */}
          <Newsletter />
        </main>
        {/* <SeeMore postagens={postagens} /> */}
      </HomeContainer>
      <Footer />    
    </div>
  )
}

export default ResultsPage;
